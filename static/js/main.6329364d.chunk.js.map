{"version":3,"sources":["assets/image.jpg","utils.js","Transfer.jsx","assets/logo.png","Header.jsx","App.jsx","reportWebVitals.js","index.js","config.js"],"names":["nearConfig","getConfig","process","initContract","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","walletConnection","WalletConnection","accountId","getAccountId","Contract","account","contractName","viewMethods","changeMethods","contract","ONE_YOCTO_NEAR","Big","times","toFixed","TransferPage","React","nearAddress","setNearAddress","amount","setAmount","userBalance","setUserBalance","storageBalance","setStorageBalance","depositStorage","to","storage_deposit","account_id","add","send_tokens","receiver_id","getStorageDeposit","storage_balance_of","storage","getBalance","ft_balance_of","balance","console","log","className","onSubmit","e","preventDefault","transferDino","htmlFor","onChange","target","value","name","type","placeholder","Header","login","logout","isSignedIn","childern","src","logo","width","height","alt","rel","href","onClick","App","useState","setInitContract","setIsSignedIn","signOut","window","location","replace","origin","pathname","requestSignIn","useEffect","init","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","CONTRACT_NAME","module","exports","env","networkId","nodeUrl","walletUrl","helperUrl","explorerUrl","keyPath","HOME","masterAccount","Error"],"mappings":"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","file":"static/js/main.6329364d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.12c479f9.jpg\";","import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'\nimport getConfig from './config'\nimport Big from 'big.js'\nexport const nearConfig = getConfig(process.env.NODE_ENV || 'development')\n\n// Initialize contract & set global variables\nexport async function initContract() {\n  // Initialize connection to the NEAR testnet\n  const near = await connect(Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, nearConfig))\n\n  // Initializing Wallet based Account. It can work with NEAR testnet wallet that\n  // is hosted at https://wallet.testnet.near.org\n  const walletConnection = new WalletConnection(near)\n\n  // Getting the Account ID. If still unauthorized, it's just empty string\n  const accountId = walletConnection.getAccountId()\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new Contract(walletConnection.account(), nearConfig.contractName, {\n    // View methods are read only. They don't modify the state, but usually return some value.\n    viewMethods: ['ft_balance_of', 'storage_balance_of'],\n    // Change methods can modify the state. But you don't receive the returned value when called.\n    changeMethods: ['storage_deposit', 'buy_tokens', 'send_tokens'],\n  })\n  return { accountId, contract, walletConnection }\n}\n\nexport function logout() {\n  window.walletConnection.signOut()\n  // reload page\n  window.location.replace(window.location.origin + window.location.pathname)\n}\n\nexport function login() {\n  // Allow the current app to make calls to the specified contract on the\n  // user's behalf.\n  // This works by creating a new access key for the user's account and storing\n  // the private key in localStorage.\n  window.walletConnection.requestSignIn(nearConfig.contractName)\n  window.contract.storage_deposit({\n    \n  },'0.00125')\n\n}\n\nexport const ONE_YOCTO_NEAR = \"1\";\nexport const BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\nexport const ONE_NEAR = Big(1).times(10 ** 24).toFixed();","import * as React from 'react'\nimport { BOATLOAD_OF_GAS, ONE_YOCTO_NEAR } from './utils'\nimport Big from 'big.js'\n\nexport default function TransferPage({ accountId, contract }) {\n  const [nearAddress, setNearAddress] = React.useState('')\n  const [amount, setAmount] = React.useState(0)\n  const [userBalance, setUserBalance] = React.useState(0)\n  const [storageBalance, setStorageBalance] = React.useState(null)\n  React.useEffect(() => {\n    const getStorageDeposit = async () => {\n      const storage = await contract.storage_balance_of({\n        account_id: accountId,\n      })\n      setStorageBalance(storage)\n    }\n    const getBalance = async () => {\n      const balance = await contract.ft_balance_of({\n        account_id: accountId,\n      })\n      setUserBalance(balance)\n    }\n    console.log(contract)\n    getBalance()\n    getStorageDeposit()\n  }, [accountId, setUserBalance, contract])\n\n  async function depositStorage(to) {\n    if (storageBalance == null) {\n      await contract.storage_deposit(\n        { account_id: to },\n        '200000000000000',\n        Big(0.00125)\n          .times(10 ** 24)\n          .add(ONE_YOCTO_NEAR)\n          .toFixed(),\n      )\n    }\n  }\n  async function transferDino(to, amount) {\n    if (storageBalance == null) {\n      await depositStorage(to)\n    } else {\n      await contract.send_tokens(\n        {\n          receiver_id: to,\n          amount,\n        },\n        '200000000000000',\n        Big(0.00125)\n          .times(10 ** 24)\n          .add(ONE_YOCTO_NEAR)\n          .toFixed(),\n      )\n    }\n  }\n\n  function onSubmit(e) {\n    e.preventDefault()\n    transferDino(nearAddress, amount)\n  }\n\n  async function buyDino(to) {\n    if (storageBalance == null) {\n      await depositStorage(to)\n    } else {\n      await contract.buy_tokens(\n        {\n          account_id: accountId,\n          amount: amount,\n        },\n        BOATLOAD_OF_GAS,\n        ONE_YOCTO_NEAR,\n      )\n    }\n  }\n  async function onBuySubmit(e) {\n    e.preventDefault()\n    await buyDino(accountId)\n  }\n\n  function onAddressChange(e) {\n    setNearAddress(e.target.value)\n  }\n\n  function onAmountChange(e) {\n    setAmount(e.target.value)\n  }\n\n  return (\n    <main className=\"container\">\n      <div className=\"jumbotron-mg pt-3\">\n        <div className=\"container push-spaces\">\n          Transfer Kittens tokens to you friends and make their day better.\n        </div>\n      </div>\n      <div className=\"transfer-main text-center\">\n        <div className=\"transfer-card\">\n          <h1>Transfer Kittens Tokens </h1>\n          <h6>Your balance: {userBalance} Kittens</h6>\n          <form onSubmit={onSubmit} className=\"transfer-form\">\n            <div className=\"row\">\n              <label htmlFor=\"exampleEmailInput\">Enter receiver address.</label>\n              <input\n                onChange={onAddressChange}\n                className=\"u-full-width\"\n                name=\"amount\"\n                type=\"text\"\n                placeholder=\"username.near\"\n              />\n            </div>\n            <div className=\"row\">\n              <label htmlFor=\"exampleEmailInput\">\n                Kittens tokens transfer amount:\n              </label>\n              <input\n                onChange={onAmountChange}\n                className=\"u-full-width\"\n                name=\"amount\"\n                type=\"number\"\n                placeholder=\"1\"\n              />\n            </div>\n            <br />\n            <div className=\"row center-row\">\n              <input\n                className=\"button-primary\"\n                type=\"submit\"\n                value=\"Transfer\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </main>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo.165ed9ec.png\";","import * as React from 'react'\nimport logo from './assets/logo.png'\n\nexport default function Header({\n  login,\n  logout,\n  accountId,\n  isSignedIn,\n  childern,\n}) {\n  return (\n    <>\n      <header className=\"header\">\n        <div className=\"center-row row\">\n          <div className=\"six columns \">\n            <div className=\"center-column\">\n              <img src={logo} width=\"64px\" height=\"64px\" alt=\"my logo\" />\n            </div>\n          </div>\n\n          <div className=\"three columns\">\n            <h4>\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={`https://explorer.testnet.near.org/accounts/${accountId}`}\n              >\n                {accountId}\n              </a>\n            </h4>\n          </div>\n\n          <div className=\"three columns text-end\">\n            {isSignedIn ? (\n              <button className=\"button button-secondary\" onClick={logout}>\n                Logout\n              </button>\n            ) : (\n              <button className=\"button\" onClick={login}>\n                Login\n              </button>\n            )}\n          </div>\n        </div>\n      </header>\n\n      {childern}\n    </>\n  )\n}\n","import 'regenerator-runtime/runtime'\nimport React from 'react'\nimport './App.css'\nimport './index.css'\nimport meme from './assets/image.jpg'\nimport getConfig from './config'\nimport { initContract } from './utils'\nimport TransferPage from './Transfer'\nimport Header from './Header'\nimport Footer from './Footer'\nconst { contractName } = getConfig(process.env.NODE_ENV || 'development')\n\nexport default function App() {\n  const [\n    { accountId, contract, walletConnection },\n    setInitContract,\n  ] = React.useState({})\n  const [isSignedIn, setIsSignedIn] = React.useState(false)\n  React.useEffect(() => {\n    async function init() {\n      const { accountId, contract, walletConnection } = await initContract()\n      setInitContract({ accountId, contract, walletConnection })\n      setIsSignedIn(walletConnection.isSignedIn())\n    }\n    init()\n  }, [setInitContract, setIsSignedIn])\n\n  function logout() {\n    walletConnection.signOut()\n    // reload page\n    window.location.replace(window.location.origin + window.location.pathname)\n  }\n\n  function login() {\n    walletConnection.requestSignIn(contractName)\n  }\n\n  // if not signed in, return early with sign-in prompt\n  if (!isSignedIn) {\n    return (\n      <>\n        <Header\n          isSignedIn={isSignedIn}\n          logout={logout}\n          login={login}\n          accountId={accountId}\n        />\n        <main>\n          <div className=\"container\">\n            <div className=\"row center-column\">\n              <h2>Kittens Token</h2>\n              <p>The coin that makes your date!</p>\n              <div className=\"center-column\">\n                <p>Login to transfer tokens.</p>\n                <button className=\"button button-primary\" onClick={login}>\n                  Login\n                </button>\n              </div>\n            </div>\n          </div>\n        </main>\n      </>\n    )\n  }\n  return (\n    <>\n      <Header\n        isSignedIn={isSignedIn}\n        logout={logout}\n        login={login}\n        accountId={accountId}\n      />\n      <TransferPage contract={contract} accountId={accountId} />\n    </>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const CONTRACT_NAME = '0t.testnet'\n\nfunction getConfig(env) {\n  switch (env) {\n    case 'production':\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org',\n        explorerUrl: 'https://explorer.mainnet.near.org',\n      }\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org',\n        explorerUrl: 'https://explorer.testnet.near.org',\n      }\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org',\n        explorerUrl: 'https://explorer.betanet.near.org',\n      }\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME,\n      }\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near',\n      }\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near',\n      }\n    default:\n      throw Error(\n        `Unconfigured environment '${env}'. Can be configured in src/config.js.`,\n      )\n  }\n}\n\nmodule.exports = getConfig\n"],"sourceRoot":""}